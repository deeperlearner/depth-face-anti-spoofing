{
    "n_gpu": 1,
    "root_dir": "./",
    "name": "DQNet_with_clf",
    "cross_validation": {
        "repeat_time": 1,
        "k_fold": 1
    },
    "optuna": {
        "n_trials": 0,
        "is_ftn": true,
        "module": "tune.objective",
        "type": "objective"
    },

    "datasets": {
        "imbalanced": false,
        "train": {
            "MSU": {
                "module": "data_loaders.MSU_dataset",
                "type": "MSUDataset",
                "kwargs": {
                    "data_dir": "/media/back/home/chuck/Dataset/MSU-MFSD",
                    "mode": "train"
                }
            }
        },
        "valid": {
        },
        "test": {
            "MSU": {
                "module": "data_loaders.MSU_dataset",
                "type": "MSUDataset",
                "kwargs": {
                    "data_dir": "/media/back/home/chuck/Dataset/MSU-MFSD",
                    "mode": "test"
                }
            }
        }
    },
    "data_loaders": {
        "train": {
            "MSU": {
                "module": "data_loaders.valid_loader",
                "type": "ValidDataLoader",
                "kwargs": {
                    "validation_split": 0.2,
                    "DataLoader_kwargs": {
                        "batch_size": 64,
                        "shuffle": true,
                        "num_workers": 4
                    },
                    "do_transform": false
                }
            }
        },
        "valid": {
        },
        "test": {
            "MSU": {
                "module": "data_loaders.valid_loader",
                "type": "ValidDataLoader",
                "kwargs": {
                    "validation_split": 0,
                    "DataLoader_kwargs": {
                        "batch_size": 64,
                        "shuffle": false,
                        "num_workers": 4
                    },
                    "do_transform": false
                }
            }
        }
    },
    "models": {
        "DQNet": {
            "module": "models.model",
            "type": "DQNet",
            "kwargs": {
            }
        },
        "DQNetclf": {
            "module": "models.model",
            "type": "DQNetclf",
            "kwargs": {
                "out_clf": 2
            }
        }
    },
    "losses": {
        "L1": {
            "module": "models.loss",
            "type": "L1Loss"
        },
        "MSE": {
            "module": "models.loss",
            "type": "MSELoss"
        },
        "CE": {
            "module": "models.loss",
            "type": "CrossEntropyLoss"
        }
    },
    "metrics": {
        "per_iteration": ["binary_accuracy"],
        "per_epoch": ["TPR", "PPV", "AUROC", "AUPRC"],
        "pick_threshold": {
            "is_ftn": true,
            "module": "models.metric",
            "type": "Youden_J",
            "kwargs": {
                "beta": 1.0
            }
        }
    },
    "optimizers": {
        "DQNet": {
            "module": "torch.optim",
            "type": "Adam",
            "kwargs": {
                "lr": 0.001
            }
        },
        "DQNetclf": {
            "module": "torch.optim",
            "type": "Adam",
            "kwargs": {
                "lr": 0.001
            }
        }
    },
    "lr_schedulers": {
        "DQNet": {
            "module": "torch.optim.lr_scheduler",
            "type": "StepLR",
            "kwargs": {
                "step_size": 50,
                "gamma": 0.1
            }
        },
        "DQNetclf": {
            "module": "torch.optim.lr_scheduler",
            "type": "StepLR",
            "kwargs": {
                "step_size": 50,
                "gamma": 0.1
            }
        }
    },
    "trainers": {
        "trainer": {
            "module": "trainers.DQ_trainer",
            "type": "DQTrainer",
            "kwargs": {
                "apex": false,

                "epochs": 4,
                "len_epoch": null,

                "save_period": 1,
                "save_the_best": true,
                "verbosity": 2,

                "monitor": "max val_AUROC",
                "early_stop": 15,

                "tensorboard": false
            }
        }
    },
    "tester": {
        "module": "testers.tester",
        "type": "Tester"
    }
}
